<SELECT>

SELECT state FROM state_abbreviation
SELECT * FROM state_abbreviation

<WHERE>

SELECT state FROM state_abbreviation WHERE state = 'Alaska'

<AND>

SELECT * FROM state_population WHERE state_code = 'AK' AND year = '2018'

<OR>

SELECT state FROM state_abbreviation WHERE state = 'California' OR state = 'Texas'

SELECT * FROM state_abbreviation WHERE state = 'California' OR state = 'Texas'

<INSERT>

INSERT INTO test_table (id, name) VALUES (1, 'Hachii')

<DELETE>

DELETE FROM test_table WHERE id = 0

<MAX, MIN, SUM, AVG, COUNT> 
SELECT MAX(monthly_state_population) FROM state_population
SELECT MIN(monthly_state_population) FROM state_population
SELECT SUM(monthly_state_population) FROM state_population
SELECT AVG(monthly_state_population) FROM state_population
SELECT COUNT(monthly_state_population) FROM state_population

<JOIN>

SELECT a.state_code, b.state FROM state_population AS a JOIN state_abbreviation AS b ON a.state_code = b.state_code

<CREATE>

CREATE TABLE users (id INT, name VARCHAR(100), age INT);

CREATE TABLE user_testing_2 (id INT PRIMARY KEY, name VARCHAR(100), department_id INT INDEX, manager_id INT FOREIGN KEY REFERENCES managers(id) INDEX);

<INSERT>

INSERT INTO state_population (state_id, state_name, population, year)
VALUES (1, 'California', 39538223, 2020);

<ORDER BY>

SELECT state_code, monthly_state_population FROM state_population ORDER BY monthly_state_population DESC

SELECT state_code, monthly_state_population FROM state_population ORDER BY monthly_state_population ASC

<GROUP BY>

SELECT state_code, AVG(monthly_state_population) AS average_population FROM state_population GROUP BY state_code

SELECT state_code, AVG(monthly_state_population) FROM state_population GROUP BY state_code 

SELECT state_code, SUM(monthly_state_population) FROM state_population GROUP BY state_code 

SELECT state_code, COUNT(monthly_state_population) FROM state_population GROUP BY state_code 


<HAVING>

SELECT state_name, SUM(population) AS total_population
FROM state_population
GROUP BY state_name
HAVING SUM(population) > 10000000;


Avery Test 
1. table name: test_table
<DELETE>
DELETE FROM test_table WHERE id = 173

<INSERT: successful>
INSERT INTO test_table (id, name) VALUES (798, 'Ellen');

<INSERT: fail due to primary key confliction>
INSERT INTO test_table (id, name) VALUES (798, 'Ellen');
INSERT INTO test_table (id, name) VALUES (798, 'Yelia');

<INSERt: fail due to datatype confliction>
INSERT INTO test_table (id, name) VALUES ('WRONG','Ellen');

<UPDATE: successful>
UPDATE test_table SET name = 'Vera' WHERE id = 798; 


2. table name: employees
<CREATE>
CREATE TABLE employees (employee_id INT PRIMARY KEY, name VARCHAR(20), salary INT);

<UPDATE: fail due to invalid datatype>
UPDATE employees SET salary = 'test' WHERE id = 1;